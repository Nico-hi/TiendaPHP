usamos el docker compose . yml 
teniendo las imagenes de docker ya puestas en el YML lo inicias , para hacer la descarga de las imagenes
docker compose up mysql (el nombre del yml de la parte de MySQL "nombre del docker")
docker compose up postgres (el nombre del yml de la parte de postgreSQL "nombre del docker")
-- lo mismo pasara para iniciarlas con 
docker compose start (nombre del docker)
-- lo mismo pasara para apagarlas con 
docker compose stop (nombre del docker)


-- si quieres usar la BBDD de My SQL en terminal usas 

MySQL CLI (mysql)

Instalación:
    sudo apt-get update
    sudo apt-get install mysql-client

    SI USAS DEBIAN COMO YO 
    sudo apt update
    sudo apt install default-mysql-client
    


Conexión a un contenedor Docker:
Por ejemplo, si tienes el servicio “mysql” expuesto en el puerto 3306:
    mysql -h 127.0.0.1 -P 3306 -u user -p
    
    El parámetro -h ( el host en estos casos es localhost) , -u (es el usuario), y -p ( te pedira el puerto ) te pedirá la contraseña.

/* COMANDOS BASICOS

Ver bases de datos:
    SHOW DATABASES;
Usar una base:
    USE testdb;

*/

-- quieres hacer lo mismo mediante postgres


PostgreSQL CLI (psql)

Instalación:
    sudo apt-get update
    sudo apt-get install postgresql -client

    SI USAS DEBIAN COMO YO 
    sudo apt update
    sudo apt install postgresql-client

Conexión a un contenedor Docker:
Si has expuesto PostgreSQL en el puerto 5432:
    psql -h 127.0.0.1 -p 5432 -U user -d testdb
        El parámetro -h ( el host en estos casos es localhost) , -u (es el usuario), -p ( te pedira el puerto ) y -d (la base de datos ) te pedirá la contraseña.
Te pedirá la contraseña al conectarse.

/* COMANDOS BASICOS

Comandos típicos:

Listar bases de datos:
    \l

Cambiar de base:
    \c testdb
*/

si quieres actualizar el YML
    docker compose down -v  

    ------------------------
si tienes un SQL ya hecho pon este comando 
dependiendo de la BBDD que uses 
docker exec -i mysql-db mysql -u user -p testdb < /var/www/TiendaPHP/JDBC/BBDD.sql

docker exec -i mysql-db mysql -u user -p testdb < /ruta/al/archivo/tablas.sql



    ---------------------


    comadnos que hice 
    cd /var/www/
  316  ls
  317  nano docker-compose.yml
  318  docker-compose up mysql
  319  ls
  320  docker compose
  321  docker compose version
  322  clear
  323  docker compose version
  324  docker compose up mysql
  325  docker ps
  326  docker compose down -v
  327  docker compose up mysql
  328  docker compose up python_app
  329  a
  330  ls
  331  cd build/
  332  ls
  333  cd ..
  334  rm build/
  335  rm -d build/
  336  ls
  337  cd ..
  338  ls
  339  cd /media/nico-hi/1tera_2/python
  340  clear
  341  docker compose up python_app
  342  docker list
  343  clear
  344  docker compose run python_app
  345  docker compose run python_app
  346  docker compose run python_app
  347  clear
  348  docker compose run python_app
  349  docker compose run python_app
  350  clear
  351  docker compose run python_app
  352  docker compose run python_app
  353  docker compose run python_app
  354  docker compose run python_app
  355  git clone https://github.com/Nico-hi/Iniciando-python.git
  356  clear
  357  cd ..
  358  ls
  359  cd /media/nico-hi/1tera_2/
  360  ls
  361  git clone https://github.com/Nico-hi/Iniciando-python.git
  362  docker compose run --rm -it python_app bash
  363  python calculadora/calculadora.py
  364  cd /media/nico-hi/1tera_2/Iniciando-python
  365  python calculadora/calculadora.py
  366  python /calculadora/calculadora.py
  367  docker compose run --rm -it python_app bash
  368  docker compose up python_app
  369  cd /media/nico-hi/1tera_2/Iniciando-python
  370  docker compose up python_app
  371  docker compose run --rm -it python_app bash
  372  clear
  373  cd /var/www/TiendaPHP/
  374  docker compose list
  375  docker compose volumes
  376  docker compose start mysql
  377  docker compose up mysql
  378  docker ls
  379  docker ps
  380  docker ps -a
  381  docker stop mysql-db
  382  docker stop mysql-db
  383  docker start mysql-db
  384      mysql -h 127.0.0.1 -P 3306 -u user -p
  385      mysql -h 127.0.0.1 -P 3306 -u user -p
  386      mysql -h 127.0.0.1 -P 3306 -u root -p
  387  docker exec -i mysql-db mysql -u user -p testdb < JDBC/BBDD.sql
  388  docker exec -i mysql-db mysql -u root -p testdb < JDBC/BBDD.sql
  389  docker exec -i mysql-db mysql -u root -p rootpass < JDBC/BBDD.sql
  390      mysql -h 127.0.0.1 -P 3306 -u root -p
  391      mysql -h 127.0.0.1 -P 3306 -u root -p
  392      mysql -h 127.0.0.1 -P 3306 -u root -p
  393      mysql -h 127.0.0.1 -P 3306 -u root -p
  394  clear
  395      mysql -h 127.0.0.1 -P 3306 -u root -p
  396      mysql -h 127.0.0.1 -P 3306 -u root -p
  397  clear
  398      mysql -h 127.0.0.1 -P 3306 -u root -p
  399      mysql -h 127.0.0.1 -P 3306 -u root -p
  400  clear
  401      mysql -h 127.0.0.1 -P 3306 -u root -p
  402  history
root@Nico-hi:~# 


dokcer externo
version: '3.9'
services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: testdb
      MYSQL_USER: user
      MYSQL_PASSWORD: userpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: userpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  mysql_data:
  postgres_data: